token literal names:
null
null
'#'
'add'
'sub'
'mul'
'div'
'mod'
'eq'
'ne'
'gt'
'lt'
'ge'
'le'
'and'
'or'
'not'
':='
'{'
'}'
'('
')'
';'
'void'
'BEGIN'
'END'
'function'
'print'
'if'
'returns'
'stop'
'next'
'while'
'then'
'int'
'boolean'
'real'
null
null
null
null
null

token symbolic names:
null
WS
COMMENTS
PLUS
MINUS
MULTIPLY
DIVIDE
MODULE
EQUALS
NOT_EQUALS
GREATER_THAN
LESS_THAN
GREATER_EQUAL
LESS_EQUAL
AND
OR
NOT
ASSIGN
OPEN_BLOCK
CLOSE_BLOCK
OPEN_ARGUMENTS
CLOSE_ARGUMENTS
END_OF_INSTRUCTION
VOID
BEGIN
END
DEF_FUNC
ST_OUTPUT
IF
RETURN
BREAK
CONTINUE
WHILE
THEN
INTEGER
BOOLEAN
DOUBLE
ID
NUMBER
BOOLEAN_VALUES
TRUE
FALSE

rule names:
main
instruction
assign
variableId
value_type
variable_type
digit


atn:
[4, 1, 41, 42, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 1, 0, 1, 0, 4, 0, 17, 8, 0, 11, 0, 12, 0, 18, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 3, 4, 36, 8, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 0, 0, 7, 0, 2, 4, 6, 8, 10, 12, 0, 1, 1, 0, 34, 36, 36, 0, 14, 1, 0, 0, 0, 2, 23, 1, 0, 0, 0, 4, 25, 1, 0, 0, 0, 6, 31, 1, 0, 0, 0, 8, 35, 1, 0, 0, 0, 10, 37, 1, 0, 0, 0, 12, 39, 1, 0, 0, 0, 14, 16, 5, 24, 0, 0, 15, 17, 3, 2, 1, 0, 16, 15, 1, 0, 0, 0, 17, 18, 1, 0, 0, 0, 18, 16, 1, 0, 0, 0, 18, 19, 1, 0, 0, 0, 19, 20, 1, 0, 0, 0, 20, 21, 5, 25, 0, 0, 21, 22, 5, 0, 0, 1, 22, 1, 1, 0, 0, 0, 23, 24, 3, 4, 2, 0, 24, 3, 1, 0, 0, 0, 25, 26, 3, 10, 5, 0, 26, 27, 3, 6, 3, 0, 27, 28, 5, 17, 0, 0, 28, 29, 3, 12, 6, 0, 29, 30, 5, 22, 0, 0, 30, 5, 1, 0, 0, 0, 31, 32, 5, 37, 0, 0, 32, 7, 1, 0, 0, 0, 33, 36, 3, 10, 5, 0, 34, 36, 5, 23, 0, 0, 35, 33, 1, 0, 0, 0, 35, 34, 1, 0, 0, 0, 36, 9, 1, 0, 0, 0, 37, 38, 7, 0, 0, 0, 38, 11, 1, 0, 0, 0, 39, 40, 5, 38, 0, 0, 40, 13, 1, 0, 0, 0, 2, 18, 35]